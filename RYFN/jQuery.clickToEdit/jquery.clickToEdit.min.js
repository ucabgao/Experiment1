/*! jquery.clickToEdit 2013-09-16 */
!function(a){"use strict";function b(b,e){this.element=b,this.$element=null,this.display=null,this.edit=null,this.displayHasChildren=null,this.options=a.extend({},d,e),this._defaults=d,this._name=c,this.init()}var c="clickToEdit",d={confirmRemove:null,postSuccess:null,postFail:null,matchOptionsByText:!1,displayTitle:"click to edit"};b.prototype.init=function(){if(this.$element=a(this.element),this.display=this.$element.find(".display"),this.displayHasChildren=!1,this.edit=this.$element.find(".edit"),0===this.display.length)throw{name:"missing display element",message:'display element is missing - you need an element with the class "display" as a child of the element you invoked clickToEdit on'};if(0===this.edit.length)throw{name:"missing edit element",message:'edit element is missing - you need an element with the class "edit" as a child of the element you invoked clickToEdit on'};this.edit.hide();var b=a.proxy(this.editMode,this),c=a.proxy(this.submitForm,this),d=a.proxy(this.cancelEdit,this),e=a.proxy(this.removeClick,this);this.$element.on("click",".display",b),this.$element.on("click","form .cancel",d),this.$element.on("submit","form",c),this.$element.on("click",'form.remove button[type="submit"]',e),this.options.displayTitle.length>0&&this.display.prop("title",this.options.displayTitle),this.displayHasChildren="undefined"==typeof this.display.data("name")&&this.display.find("[data-name]").length>0},b.prototype.editMode=function(){this.display.hide();var b=this.options;if(this.displayHasChildren){var c=this.display;this.edit.find("input[type=text], textarea").not("[type=hidden]").each(function(b,d){var e=c.find("[data-name="+d.name+"]");a(d).val(e.text())}),this.edit.find("select").each(function(d,e){var f=c.find('[data-name="'+e.name+'"]'),g=a(e);if(b.matchOptionsByText){var h=g.find("option").filter(function(){return a(this).text()===f.text()});g.val(h.val())}else a(e).val(f.text())})}else{var d='[name="'+this.display.data("name")+'"]',e=this.edit.find("input[type=text], textarea"+d);if(1===e.length)e.val(this.display.text());else{var f=this.edit.find("select"+d);if(1===f.length)if(b.matchOptionsByText){var g=f.find("option").filter(function(){return a(this).text()===this.display.text()});this.edit.find("select"+d).val(g.val())}else this.edit.find("select"+d).val(this.display.text())}}this.edit.show()},b.prototype.cancelEdit=function(){this.display.show(),this.edit.hide()},b.prototype.submitForm=function(b){var c=a.proxy(this.editSuccess,this),d=a.proxy(this.ajaxError,this),e=a(b.currentTarget);return e.hasClass("remove")&&(c=a.proxy(this.removeSuccess,this)),a.ajax({url:e[0].action,type:e[0].method,context:e,data:e.serialize(),success:c,error:d}),b.preventDefault(),!1},b.prototype.removeClick=function(b){return null!==this.options.confirmRemove&&a.isFunction(this.options.confirmRemove)&&!this.options.confirmRemove(this.$element)?(b.preventDefault(),!1):void 0},b.prototype.editSuccess=function(b){if(this.displayHasChildren){var c=this.display,d=this.options;this.edit.find("input[type=text], textarea").each(function(b,d){var e=c.find("[data-name="+d.name+"]");e.text(a(d).val())}),this.edit.find("select").each(function(b,e){var f=c.find("[data-name="+e.name+"]");d.matchOptionsByText?f.text(a(e).find("option:selected").text()):f.text(a(e).val())})}else{var e=this.edit.find("input[type=text], textarea, select").first();if(e.is("input")||e.is("select")&&!this.options.matchOptionsByText)this.display.text(e.val());else if(e.is("select")&&this.options.matchOptionsByText){var f=e.find("option:selected").text();this.display.text(f)}}this.edit.hide(),this.display.show(),null!==this.options.postSuccess&&a.isFunction(this.options.postSuccess)&&this.options.postSuccess(this.$element,b)},b.prototype.removeSuccess=function(b){this.$element.remove(),null!==this.options.postSuccess&&a.isFunction(this.options.postSuccess)&&this.options.postSuccess(this.$element,b)},b.prototype.ajaxError=function(b,c,d){null!==this.options.postFail&&a.isFunction(this.options.postFail)&&this.options.postFail(this.$element,b,c,d)},a.fn[c]=function(d){return this.each(function(){a.data(this,"plugin_"+c)||a.data(this,"plugin_"+c,new b(this,d))})}}(jQuery);